


Public srcFolderPath As String = "C:\Tools\RDL"
Public  destFolderPath As String = "/LYNQ"
Public	sharedDataSourcePath As String = "/Data Sources"

Public mapFilePath As String = srcFolderPath + "\map\map.txt"

Public Sub Main()

		
        Dim definition As [Byte]() = Nothing
        Dim warnings As Warning() = Nothing
		
        Dim rptdirinfo As System.IO.DirectoryInfo

        rptdirinfo = New System.IO.DirectoryInfo(srcFolderPath + "\")

        Dim filedoc As FileInfo()

        filedoc = rptdirinfo.GetFiles("*.rdl")

        For rptcount As Integer = 0 To filedoc.Length - 1

			Console.WriteLine("")
            Console.WriteLine("Uploading RDL:" + filedoc(rptcount).Name)
			Console.WriteLine("")
			
			Try
			
				Dim stream As FileStream = File.OpenRead(filedoc(rptcount).FullName)
				definition = New [Byte](stream.Length - 1) {}
				stream.Read(definition, 0, CInt(stream.Length))

				warnings = rs.CreateReport(filedoc(rptcount).Name.ToString.Replace(".rdl",""), destFolderPath, True, definition, Nothing)

				If Not (warnings Is Nothing) Then
					Dim warning As Warning
					For Each warning In warnings
						Console.WriteLine(filedoc(rptcount).Name.ToString.Replace(".rdl","") + " - " +warning.Message)
					Next warning
				Else
					Console.WriteLine("Report: {0} PUBLISHED!", filedoc(rptcount).Name.ToString.Replace(".rdl",""))
				End If
				
				UpdateDataSources_report(filedoc(rptcount).Name.ToString.Replace(".rdl",""))
				
			Catch ex As Exception
				Console.WriteLine(filedoc(rptcount).Name.ToString.Replace(".rdl","") + " - " + ex.Message)

				
			End Try

        Next
		
		UpdateDataSources_report("_opSurplusTotalOpSurplusChartData")

		Console.WriteLine("")
		Console.WriteLine("----------------------------------------")
        Console.WriteLine("SSRS Upload Finished Successfully")
		Console.WriteLine("----------------------------------------")

End Sub


 'Utility to Update The Data Sources on the Server
  
 Public Sub UpdateDataSources_report(ReportName as string)
  
 rs.Credentials = System.Net.CredentialCache.DefaultCredentials
  
 Try
  
     Dim dataSources() as DataSource = rs.GetItemDataSources(destFolderPath + "/" + ReportName)
     
     For Each ds as DataSource in dataSources
  
        Dim sharedDs(0) as DataSource
  
        sharedDs(0)=GetDataSourceForReport(sharedDataSourcePath, ds.Name, ReportName) 
        rs.SetItemDataSources( destFolderPath + "/" + ReportName, sharedDs)

        Console.WriteLine("Set " & ds.Name & " datasource for " & "/" +  ReportName & " report")
  

     Next
	
	Console.WriteLine("")
    Console.WriteLine("All the shared data source reference set for report {0} ", ReportName)
     
 Catch goof As SoapException
  
 Console.WriteLine(goof.Detail.InnerXml.ToString())
  
 End Try
  
 End Sub

 'Function to Reference Data Sources
  
 Private Function GetDataSourceForReport(sharedDataSourcePath as string, dataSourceName as String, ReportName as String) as DataSource
  
     Dim reference As New DataSourceReference()
  
     Dim ds As New DataSource
  
     reference.Reference = sharedDataSourcePath & "/" & GetDataSourceFromMapFile(ReportName, dataSourceName) 
  
     ds.Item = CType(reference, DataSourceDefinitionOrReference)
  
     ds.Name = dataSourceName
  	 
	 Console.WriteLine("")
     Console.WriteLine("Attempting to Link Data Source {0}", ds.Name)
  
     GetDataSourceForReport=ds
  
 End Function

 Function GetDataSourceFromMapFile(rptName As String, dataSourceName As String) As String
	Dim TextLine As String
	Dim txtArr as Object()
	If System.IO.File.Exists( mapFilePath ) = True Then

		Dim objReader As New System.IO.StreamReader(mapFilePath)

		Do While objReader.Peek() <> -1

			TextLine = objReader.ReadLine()
			txtArr = TextLine.ToString.Split(",")
			
			if(txtArr(1) = dataSourceName And txtArr(2) = rptName)
				GetDataSourceFromMapFile = txtArr(0)
				Exit Function
			End if
		
		Loop
	Else
		Console.WriteLine("File Does Not Exist")
	End If
End Function